distinct
iriss=data.frame(iris)
iriss %>%
select(Species) %>%
distinct
?lead
lead(iriss,2)
library(nycflights13)
flights = data.frame("flights")
airports = data.frame(airports)
airlines =data.frame(airlines)
flights
airports
flights = data.frame(flights)
airports = data.frame(airports)
airlines =data.frame(airlines)
flights
data("flights")
force(flights)
flights = data(flights)
airports = data(airports)
airlines =data(airlines)
flights
airlines
flights = flights
airports = data(airports)
airlines =data(airlines)
flights = data("flights")
airports = data(airports)
airlines =data(airlines)
data("flights")
force(flights)
d=data("flights")
data("flights")
d=flights
vol = nycflights13::flights
rm (list=ls())
vol = nycflights13::flights
aeroport =nycflights13::airports
line=nycflights13::airlines
vol
v<- vol %>%
dep_delay<=15
vol
select(vol, dep_deplay>10) 
?select(vol, dep_deplay>10) 
?select()
v<- vol %>%
select(vol,where(dep_delay>10))
v<- vol %>%
select(all(),where(dep_delay>10))
v<- vol %>%
select(dep_delay,where(dep_delay>10))
vol[vol$dep_delay>10,]
vol[vol$dep_delay>10]
vol[vol$dep_delay>10,]
vol[vol$dep_delay>=10 and vol$dep_delay<=15,]
vol[vol$dep_delay>=10 & vol$dep_delay<=15,]
vol[vol$distance=max(vol$distance),]
vol[vol$distance==max(vol$distance),]
vols_plus_grande_distance <- flights %>%
filter(distance == max(distance, na.rm = TRUE))
is.character(vol$dep_delay)
is.character(vol$dest)
where (is.character(vol$dest))
where (select(is.character(vol$dest)))
lapply(vol, is.caractere)
lapply(vol, is.charactere)
lapply(vol, is.character())
lapply(vol, is.character)
vol[,lapply(vol, is.character)]
Filter(is.character, flights)
# ou
flights %>%
select(where(is.character))
?relocate
aeroport %>% relocate(where(starts_with(name))
aeroport %>% relocate(name,tzone)
vol[vol$distance==min(vol$dep_delay),]
vols_plus_grande_distance <- flights %>%
filter(dep_delay == min(dep_delay, na.rm = TRUE))
vol[vol$dep_delay==min(vol$dep_delay),]
data=data(hdv2003)
library(dplyr)
detach("package:dplyr", unload = TRUE)
data(package = .packages(all.available = TRUE))
library(questionr)
install.packages("htmltools")
library(questionr)
install.packages("questionr")
library(questionr)
install.packages("fastmap")
library(questionr)
data(hdv2003)
rm(list = ls())
library(ggplot2)
library(gridExtra) 
library(gridExtra)
p=ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width))
p+geom_point()
p=ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point()
dsqrt=transform(iris, Sepal.Length=sqrt(Sepal.Length))
q=p %+% dsqrt
View(q)
p=ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point()
dsqrt=transform(iris, Sepal.Length=sqrt(Sepal.Length))
q=p %+% dsqrt
p=ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point()
dsqrt=transform(iris, Sepal.Length=sqrt(Sepal.Length))
q=p %+% dsqrt
q+geom_point()
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point()
# syntaxe équivalente
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point(aes(colour=Species))
# syntaxe équivalente
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point(aes(shape=Species))
# syntaxe équivalente
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point(aes(shape=Species, color=Species))
ggplot(iris, aes(Sepal.Length,Petal.Length)) + geom_point() +
aes(colour=Sepal.Width > 3) +
(scale_colour_discrete(name ="Largeur du sépal",
labels=c("inférieure ou égale à 3 cm" , "supérieure à 3 cm")))
ggplot(iris, aes(Sepal.Length,Petal.Length)) + geom_point() +
aes(colour=Sepal.Length > 3) +
(scale_colour_discrete(name ="Largeur du sépal",
labels=c("inférieure ou égale à 3 cm" , "supérieure à 3 cm")))
ggplot(iris, aes(Sepal.Length,Petal.Length)) + geom_point() +
aes(colour=Sepal.Width > 3) +
(scale_colour_discrete(name ="Largeur du sépal",
labels=c("inférieure ou égale à 3 cm" , "supérieure à 3 cm")))
x<- matrix(1:6, ncol=2)
x
1 + 1
#| echo: True
2 * 2
x<- matrix(1:6, ncol=2)
x
x[c(2,3),]
data=list(nom=c("Paul","Jacq"),age=c(42,39))
data[1]
data$nom
data=data.frame(x=c(1,2,3),y=c(5,6,8),z=c('Homme','Femme','Femme'))
data$x
data[,1]
data[,"x"]
vecteur = c('neutre','plus','moins','plus','neutre','plus','neutre','neutre','plus')
facteur=factor(vecteur)
facteur
facteur2 = factor(facteur,labels = c("négatif","neutre","positf"))
facteur2
levels(facteur)
facteur3=facteur2[-c(2,6)]
facteur3
droplevels(facteur3)
relevel(facteur,'neutre')
x= factor(c(9,12,23,83,37,20))
as.numeric(as.character(x))
fct1 <- function(x) {
x_increment <- x+1
return(x_increment)
}
fct1(38)
fct2 <- function(x){
x_increment <<- x+1
return(x_increment)
}
fct2(38)
x_increment
seq(0, 1, length.out = 10)
rep(1:3,8)
rep(1:3, rep(8,3))
rep(rep(1:4, rep(2,4)), 3)
gl(5,10)
letters[5:10]
LETTERS[5:10]
set.seed(1200)
data= data.frame(x=1:3,y=rnorm(3,2,1))
data
diff(v, lag=3)
(ggplot(data=iris, aes(x=Sepal.Length,
y=Petal.Length, colour=Species))) +
geom_point(aes(size=Sepal.Width),alpha=.5) +
(theme(legend.direction = "vertical",
legend.position = "bottom",
legend.box = "horizontal"))
library(ggplot2)
library(gridExtra)
(ggplot(data=iris, aes(x=Sepal.Length,
y=Petal.Length, colour=Species))) +
geom_point(aes(size=Sepal.Width),alpha=.5) +
(theme(legend.direction = "vertical",
legend.position = "bottom",
legend.box = "horizontal"))
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point(aes(colour = Petal.Length)) +
scale_colour_gradient(low = "yellow", high = "green")
(ggplot(data=iris, aes(x=Sepal.Length,
y=Petal.Length, colour=Species))) +
geom_point(aes(size=Sepal.Width),alpha=.1) +
(theme(legend.direction = "vertical",
legend.position = "bottom",
legend.box = "horizontal"))
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point() + facet_grid(.~Species)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point() + facet_grid(Species~.)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width,colour=Species)) +
geom_point() + facet_wrap(.~Species,ncol=2) + theme(legend.position="none")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width,colour=Species)) +
geom_point() + facet_wrap(.~Species,ncol=2,nrow = 2) + theme(legend.position="none")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width,colour=Species)) +
geom_point() + facet_wrap(.~Species,ncol=1,nrow = 2) + theme(legend.position="none")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width,colour=Species)) +
geom_point() + facet_wrap(.~Species,ncol=1, nrow = 1) + theme(legend.position="none")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width,colour=Species)) +
geom_point() + facet_wrap(.~Species, nrow = 2) + theme(legend.position="none")
set.seed(932)
sample_iris=iris[sample(nrow(iris), 50), ]
ggplot(data=sample_iris, aes(x=Species, fill=Species)) +
geom_bar(alpha=.5)
ggplot(data=sample_iris, aes(x=Species, fill=Species)) +
geom_bar(alpha=.5, width=.25) 
ggplot(data=sample_iris, aes(x=Species, fill=Species)) +
geom_bar(alpha=.5, width=.25)
ggplot(data=sample_iris, aes(x=Species, fill=Species)) +
geom_bar(alpha=.9, width=.25)
ggplot(data=sample_iris, aes(x=Species, fill=Species)) +
geom_bar(alpha=1, width=.5)
ggplot(data=sample_iris, aes(x=Species, fill=Species)) +
geom_bar(alpha=2, width=.5)
ggplot(data=sample_iris, aes(x=Species, fill=Species)) +
geom_bar(alpha=2, width=.1)
quarto install tinytex
set.seed(2)
iris$Binaire=factor(rbinom(150,1,.5))
ggplot(data=iris, aes(x=Species, fill=Binaire)) +
geom_bar(stat="count")
ggplot(data=iris, aes(x=Species, fill=Binaire)) +
geom_bar(stat="count", position=position_dodge())
ggplot(data=iris, aes(x=Species, fill=Binaire)) +
geom_bar(stat="count", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#999999", "#E69F00"))
ggplot(data=iris, aes(x=Species, fill=Binaire)) +
geom_bar(stat="count", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#999999", "#E69H00"))
ggplot(data=iris, aes(x=Species, fill=Binaire)) +
geom_bar(stat="count", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#999999", "#E69A00"))
ggplot(data=iris, aes(x=Species, fill=Binaire)) +
geom_bar(stat="count", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#999999", "#023321"))
ggplot(data=iris, aes(x=Species, fill=Binaire)) +
geom_bar(stat="count", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#994999", "#023321"))
ggplot(data=iris, aes(x=Species, fill=Binaire)) +
geom_bar(stat="count", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#994999", "#923321"))
ggplot(iris, aes(Species, Sepal.Length)) + geom_boxplot()
min(iris$Sepal.Length)
ggplot(iris, aes(Species, Sepal.Length)) + geom_boxplot(outlier.size = 0) +
(geom_jitter(position=position_jitter(width=0),
aes(colour=Species), alpha=0.7)) +
(stat_summary(fun.y=mean, shape=17, geom="point",
size=4, col="goldenrod3")) +
scale_y_continuous("values") +
scale_x_discrete("group") +
theme(legend.position="none")
ggplot(iris, aes(Species, Sepal.Length)) + geom_boxplot(outlier.size = 0) +
(geom_jitter(position=position_jitter(width=0),
aes(colour=Species), alpha=0.7)) +
(stat_summary(fun.y=mean, shape=17, geom="point",
size=4, col="goldenrod3")) +
scale_y_continuous("values") +
scale_x_discrete("group") +
theme(legend.position="none")
data=data.frame(x=rnorm(100000))
p1=ggplot(data, aes(x = x)) + geom_histogram() +
geom_line(stat="density", col = "#CC6666", size = 1.2)
p2=ggplot(data, aes(x = x, y = ..density..)) +
geom_histogram() +
geom_line(stat="density", col = "#CC6666", size = 1.2)
data=data.frame(x=rnorm(100000))
p1=ggplot(data, aes(x = x)) + geom_histogram() +
geom_line(stat="density", col = "#CC6666", size = 1.2)
p2=ggplot(data, aes(x = x, y = ..density..)) +
geom_histogram() +
geom_line(stat="density", col = "#CC6666", linewidth = 1.2)
data=data.frame(x=rnorm(100000))
p1=ggplot(data, aes(x = x)) + geom_histogram() +
geom_line(stat="density", col = "#CC6666", size = 1.2)
p2=ggplot(data, aes(x = x, y = ..density..)) +
geom_histogram() +
geom_line(stat="density", col = "#CC6666", linewidth = 1.2)
data=data.frame(x=rnorm(100000))
p1=ggplot(data, aes(x = x)) + geom_histogram() +
geom_line(stat="density", col = "#CC6666", size = 1.2)
p2=ggplot(data, aes(x = x, y = ..density..)) +
geom_histogram() +
geom_line(stat="density", col = "#CC6666", linewidth = 1.2)
p2
grid.arrange(p1,p2, ncol=2)
ggplot(iris, aes(Species, y=Sepal.Width)) + geom_point() +
stat_summary(fun.y = "median", colour = "red", size = 2, geom = "point")
ggplot(iris, aes(Species, y=Sepal.Width)) + geom_point() +
stat_summary(fun.y = "median", colour = "red", size = 2, geom = "point")
ggplot(iris, aes(Species, y=Sepal.Width)) + geom_point() +
stat_summary(fun.y = "median", colour = "red", size = 2, geom = "point")
irisplot = (ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species))) +
geom_point()
(ggsave(filename="graphique-points.pdf", plot=irisplot,
width = 5.25, height = 5.25, dpi = 200))
irisplot = (ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species))) +
geom_point()
(ggsave(filename="graphique-points.pdf", plot=irisplot,
width = 5.25, height = 5.25, dpi = 200))
#Les options possibles sont : "eps", "pdf", "jpeg", "tiff", "png", "bmp", "svg" et
"wmf" (pour Windows)
#Les options possibles sont : "eps", "pdf", "jpeg", "tiff", "png", "bmp", "svg" et
"wmf" (pour Windows)
(ggplot(data = iris, aes(x = Sepal.Width > 3,
y = Sepal.Length))) +
geom_boxplot() +
scale_x_discrete(labels = c("< 3", "3+")) +
facet_grid(. ~ Species) +
(labs(y = "Longueur du sépal",
x = "Largeur du sépal",
title = "Données de Fisher concernant
les iris, 1936")) +
theme_linedraw() +
theme(strip.text = element_text(size = rel(1)),
panel.grid = element_blank())
(ggplot(data = iris, aes(x = Sepal.Width > 3,
y = Sepal.Length))) +
geom_boxplot() +
scale_x_discrete(labels = c("< 3", "3+")) +
facet_grid(. ~ Species) +
(labs(y = "Longueur du sépal",
x = "Largeur du sépal",
title = "Données de Fisher concernant
les iris, 1936")) +
theme_linedraw() +
theme(strip.text = element_text(size = rel(1)),
panel.grid = element_blank())
set.seed(1992)
df=data.frame(value1 = rnorm(200),
value2 = rnorm(200),
value3 = rnorm(200),
value4 = rnorm(200))
p1=ggplot(df) + geom_density(aes(x=value1))
p2=ggplot(df) + geom_density(aes(x=value2))
p3=ggplot(df) + geom_density(aes(x=value3))
p4=ggplot(df) + geom_density(aes(x=value4))
(grid.arrange(p1, arrangeGrob(p2,p3,p4, ncol=3),
heights=c(2.5/4, 1.5/4), ncol=1))
set.seed(1992)
df=data.frame(value1 = rnorm(200),
value2 = rnorm(200),
value3 = rnorm(200),
value4 = rnorm(200))
p1=ggplot(df) + geom_density(aes(x=value1))
p2=ggplot(df) + geom_density(aes(x=value2))
p3=ggplot(df) + geom_density(aes(x=value3))
p4=ggplot(df) + geom_density(aes(x=value4))
(grid.arrange(p1, arrangeGrob(p2,p3,p4, ncol=3),
heights=c(2.5/4, 1.5/4), ncol=1))
View(df)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point() +
annotate("text",x=6, y=4.3, label="Ali est têtu", colour="dodger blue")
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point() +
annotate("text",x=6, y=4.3, label="Ali est têtu", colour="dodger blue",size=7,
family="Courier", fontface="bold", angle=30) 
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point() +
annotate("text",x=6, y=4.3, label="Ali est têtu", colour="dodger blue",size=7,
family="Courier", fontface="bold", angle=30)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point() +
annotate("text",x=6, y=4.3, label="Ali est têtu", colour="dodger blue",size=7,
family="Courier", fontface="bold", angle=10)
ggplot(data=iris ,aes(x=Sepal.Length, y=Sepal.Width)) + geom_point() +
scale_x_continuous(expression(sqrt(x))) +
scale_y_continuous(expression(frac(alpha,beta)))
library(esquisse)
esquisse:::ggplot_to_ppt()
esquisse:::esquisser()
ggplot(iris) +
aes(x = Sepal.Length, y = Sepal.Width, colour = Species) +
geom_point() +
geom_point(aes(x = Sepal.Length, y = Sepal.Width)) +
scale_color_hue(direction = 1) +
labs(
x = "long",
y = "large",
title = "Titre du graph",
color = "red"
) +
theme_minimal() +
theme(
plot.caption = element_text(face = "italic",
hjust = 0.5)
)
# Charger les bibliothèques nécessaires
library(dplyr)
library(devtools)
# Charger les bibliothèques nécessaires
library(dplyr)
library(devtools)
# Charger les bibliothèques nécessaires
library(dplyr)
#library(devtools)
library(plotly)
library(rnaturalearth)
# Charger les bibliothèques nécessaires
library(dplyr)
#library(devtools)
library(plotly)
#library(rnaturalearth)
install.packages(c(devtools,rnaturalearth))
install.packages(c("devtools","rnaturalearth""))
install.packages(c("devtools","rnaturalearth"))
# Charger les bibliothèques nécessaires
library(dplyr)
library(devtools)
# Charger les bibliothèques nécessaires
library(dplyr)
library(devtools)
library(plotly)
library(rnaturalearth)
# Charger les bibliothèques nécessaires
library(dplyr)
library(devtools)
library(plotly)
library(rnaturalearth)
library(tmap)
install.packages("tmap")
# Charger les bibliothèques nécessaires
library(dplyr)
library(devtools)
library(plotly)
library(rnaturalearth)
library(tmap)
bf <- ne_states(country = "Burkina Faso", returnclass = "sf")
plot_ly(bf, split = ~name, color = ~provnum_ne) %>%
layout(showlegend = FALSE)
tmap_mode(mode = "view")
tm_shape(bf) +
tm_polygons()
library(mapview)
install.packages("mapview")
library(mapview)
mapview()
mapview(bf, zcol = "region", legend = FALSE)
Decat = read.csv("Decat.csv")
View(Decat)
Decat = read.csv("Decat.csv",sep = ";")
View(Decat)
Decat = read.csv("Decat.csv",sep = ";",encoding = "utf8")
View(Decat)
Decat = read.csv("Decat.csv",sep = ";",encoding = "utf8",)
View(Decat)
Decat = read.csv("Decat.csv",sep = ";",encoding = "utf8")
Decat = read.csv("Decat.csv",sep = ";",encoding = "utf8",check.names =FALSE,row.names = 1)
View(Decat)
Decat = read.csv("Decat.csv",sep = ";",encoding = "latin1",check.names =FALSE,row.names = 1)
View(Decat)
Decat = read.csv("Decat.csv",sep = ";",encoding = "latin1",check.names =FALSE,row.names = 1, skip = 3)
View(Decat)
Decat = read.csv("Decat.csv",sep = ";",encoding = "latin1",check.names =FALSE,row.names = 1, skip = 1)
View(Decat)
Decat = read.csv("Decat.csv",sep = ";",encoding = "latin1",check.names =FALSE,row.names = 1, skip = 0)
View(Decat)
decat <- Decat[, sapply(Decat, is.numeric)]
round(cor(decat),2)
library(FactoMineR)
?pca
?PCA
PCA(Decat, scale.unit = TRUE, ncp = 5, ind.sup =32:41,
quanti.sup =11:12, quali.sup = 13, row.w = NULL,
col.w = NULL, graph = TRUE, axes = c(1,2))
eig.val <- get_eigenvalue(result_ACP)
library(factoextra)
eig.val <- get_eigenvalue(result_ACP)
result_ACP=PCA(Decat, scale.unit = TRUE, ncp = 5, ind.sup =32:41,
quanti.sup =11:12, quali.sup = 13, row.w = NULL,
col.w = NULL, graph = TRUE, axes = c(1,2))
result_ACP <- PCA(Decat, scale.unit = TRUE, ncp = 5, ind.sup =32:41,
quanti.sup =11:12, quali.sup = 13, row.w = NULL,
col.w = NULL, graph = TRUE, axes = c(1,2))
eig.val <- get_eigenvalue(result_ACP)
eig.val
set.seed(1030)
M= 50000
n=20
moyenne=-1.2
variance=2
sigma <- sqrt(variance)
echantillons <- matrix(rnorm(n*M, mean = moyenne, sd = sigma),  nrow = 20, ncol = 50000)
echantillons
set.seed(1030)
n <- 20
Nsimu <- 50000
ech <- rnorm(n,mean=-1.2,sd=sqrt(2))
simu <- replicate(Nsimu,rnorm(n,mean=-1.2,sd=sqrt(2)),simplify=TRUE)
inter.mu <- function(x) t.test(x,conf.level=0.9)$conf.int
res <- t(apply(simu,MARGIN=2,FUN=inter.mu))
?cor.test.2.sample()
sujet=1:14
avant=c(57,54,62,64,71,65,70,75,68,70,77,74,80,83)
apres=c(55,60,68,69,70,73,74,74,75,76,76,78,81,90)
t.test(avant,apres, paired=T)
