# Chargement des packages
#install.packages("haven")
library(haven) # Chargement de la base
library(questionr) # pour le recodage
knitr::opts_chunk$set(echo = FALSE)
# Importation de la base
data_anova  <- read_dta("data_anova.dta")
#irec()
## Recodage de data_anova$treat en data_anova$groupe
data_anova$groupe <- as.character(data_anova$treat)
data_anova$groupe[data_anova$treat == "0"] <- "Groupe de contrôle"
data_anova$groupe[data_anova$treat == "1"] <- "Groupe de traitement"```
#irec()
## Recodage de data_anova$treat en data_anova$groupe
data_anova$groupe <- as.character(data_anova$treat)
data_anova$groupe[data_anova$treat == "0"] <- "Groupe de contrôle"
data_anova$groupe[data_anova$treat == "1"] <- "Groupe de traitement"
jeunes <- subset(data_anova, ycohort == 1)
View(jeunes)
colnames(jeunes)
# filtrage des individus jeunes
jeunes <- subset(data_anova, ycohort == 1)
aggregate(jeunes[, c("primary","age1994","sex1994")],
by = list(jeunes$groupe), FUN = mean, na.rm=TRUE)
t.test(primary ~ groupe, data = jeunes)
library(knitr) # la construction du tableau kable
# Liste des variables à tester
variables <- c("primary", "age1994", "sex1994")
# Initialiser une liste pour stocker les résultats
results <- lapply(variables, function(var) {
# Effectuer le t-test
formula <- as.formula(paste(var, "~ groupe"))
test <- t.test(formula, data = jeunes)
# Construire une ligne de résultat
data.frame(
variable = var,
p_value = round(test$p.value, 5),
interpretation = ifelse(test$p.value < 0.05,
"Les deux sont significativement different",
"Pas de différence significative entre les deux groupes")
)
})
# Fusionner tous les résultats dans un tableau
results_df <- do.call(rbind, results)
# Afficher avec kable
kable(results_df, caption = "Test de Welch entre groupe de traitement et de contrôle")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# Chargement des packages
#install.packages("haven")
library(haven) # Chargement de la base
library(questionr) # pour le recodage
library(dplyr) # pour les traitements de données
colnames(jeunes)
library(knitr) # la construction du tableau kable
# Liste des variables à tester
variables <- c("primary", "age1994", "sex1994", "pipwater", "electric", "distcapital")
# Initialiser une liste pour stocker les résultats
results <- lapply(variables, function(var) {
# Effectuer le t-test
formula <- as.formula(paste(var, "~ groupe"))
test <- t.test(formula, data = jeunes)
# Construire une ligne de résultat
data.frame(
variable = var,
p_value = round(test$p.value, 5),
interpretation = ifelse(test$p.value < 0.05,
"Les deux sont significativement different",
"Pas de différence significative entre les deux groupes")
)
})
# Fusionner tous les résultats dans un tableau
results_df <- do.call(rbind, results)
# Afficher avec kable
kable(results_df, caption = "Test de Welch entre groupe de traitement et de contrôle")
villages <- data_anova[!duplicated(data_anova$cluster), ]
# Moyennes
aggregate(cbind(electric, pipwater, distcapital) ~ treat, data =villages, mean)
villages <- data_anova[!duplicated(data_anova$cluster), ]
# Moyennes
aggregate(cbind(electric, pipwater, distcapital) ~ groupe, data =villages, mean)
library(knitr) # la construction du tableau kable
# Liste des variables à tester
variables <- c("primary", "age1994", "sex1994", "pipwater", "electric", "distcapital")
resumer_tests <- function(variables){
# Initialiser une liste pour stocker les résultats
results <- lapply(variables, function(var) {
# Effectuer le t-test
formula <- as.formula(paste(var, "~ groupe"))
test <- t.test(formula, data = jeunes)
# Construire une ligne de résultat
data.frame(
variable = var,
p_value = round(test$p.value, 5),
interpretation = ifelse(test$p.value < 0.05,
"Les deux sont significativement different",
"Pas de différence significative entre les deux groupes")
)
})
# Fusionner tous les résultats dans un tableau
results_df <- do.call(rbind, results)
# Afficher avec kable
table <- kable(results_df, caption = "Test de Welch entre groupe de traitement et de contrôle")
return( table)
}
resumer_tests(variables)
resumer_tests(villages_vars)
villages_vars <- c("electric", "pipwater", "distcapital")
resumer_tests(villages_vars)
library(knitr) # la construction du tableau kable
# Liste des variables à tester
variables <- c("primary", "age1994", "sex1994", "pipwater", "electric", "distcapital")
resumer_tests <- function(variables){
# Initialiser une liste pour stocker les résultats
results <- lapply(variables, function(var) {
# Effectuer le t-test
formula <- as.formula(paste(var, "~ groupe"))
test <- t.test(formula, data = jeunes)
# Construire une ligne de résultat
data.frame(
variable = var,
p_value = round(test$p.value, 5),
interpretation = ifelse(test$p.value < 0.05,
"Les deux sont significativement different",
"Pas de différence significative entre les deux groupes")
)
})
# Fusionner tous les résultats dans un tableau
results_df <- do.call(rbind, results)
# Afficher avec kable
table <- kable(results_df, caption = "Test de Welch entre groupe de traitement et de contrôle")
return( table)
}
resumer_tests(variables)
library(knitr) # la construction du tableau kable
# Liste des variables à tester
variables <- c("primary", "age1994", "sex1994")
resumer_tests <- function(variables){
# Initialiser une liste pour stocker les résultats
results <- lapply(variables, function(var) {
# Effectuer le t-test
formula <- as.formula(paste(var, "~ groupe"))
test <- t.test(formula, data = jeunes)
# Construire une ligne de résultat
data.frame(
variable = var,
p_value = round(test$p.value, 5),
interpretation = ifelse(test$p.value < 0.05,
"Les deux sont significativement different",
"Pas de différence significative entre les deux groupes")
)
})
# Fusionner tous les résultats dans un tableau
results_df <- do.call(rbind, results)
# Afficher avec kable
table <- kable(results_df, caption = "Test de Welch entre groupe de traitement et de contrôle")
return( table)
}
resumer_tests(variables)
library(knitr) # la construction du tableau kable
# Liste des variables à tester
variables <- c("primary", "age1994", "sex1994")
resumer_tests <- function(variables){
# Initialiser une liste pour stocker les résultats
results <- lapply(variables, function(var) {
# Effectuer le t-test
formula <- as.formula(paste(var, "~ groupe"))
test <- t.test(formula, data = jeunes)
# Construire une ligne de résultat
data.frame(
variable = var,
p_value = round(test$p.value, 5),
interpretation = ifelse(test$p.value < 0.05,
"Les deux sont significativement different",
"Pas de différence significative entre les deux groupes")
)
})
# Fusionner tous les résultats dans un tableau
results_df <- do.call(rbind, results)
# Afficher avec kable
table <- kable(results_df, caption = "Test de Welch entre groupe de traitement et de contrôle")
return( table)
}
resumer_tests(variables)
# MCO
model_mco <- lm(primary ~ groupe, data=jeunes)
summary(model_mco)
# Option logit :
model_logit <- glm(primary ~ groupe, data = jeune, family = binomial)
summary(model_logit)
# Option logit :
model_logit <- glm(primary ~ groupe, data = jeunes, family = binomial)
summary(model_logit)
param <- model_mco$coefficients
param
model2 <- lm(primary ~ groupe + age1994 + sex1994 + distcapital + electric + pipwater, data = jeunes)
summary(model2)
# Moyennes primaires pour chaque groupe
with(data_anova, tapply(primary, list(groupe, ycohort), mean, na.rm = TRUE))
# OU en filtrant et moyennant
mean(data_anova$primary[data_anova$groupe == 1 & data_anova$ycohort == 1], na.rm = TRUE)  # A
mean(data_anova$primary[data_anova$groupe == 1 & data_anova$ocohort == 1], na.rm = TRUE) # B
mean(data_anova$primary[data_anova$groupe == 0 & data_anova$ycohort == 1], na.rm = TRUE) # C
mean(data_anova$primary[data_anova$groupe == 0 & data_anova$ocohort == 1], na.rm=TRUE)#D
mean(data_anova$primary[data_anova$groupe == 1 & data_anova$ycohort == 1], na.rm = TRUE)  # A
mean(data_anova$primary[data_anova$groupe == 1 & data_anova$ocohort == 1], na.rm = TRUE) # B
mean(data_anova$primary[data_anova$groupe == 0 & data_anova$ycohort == 1], na.rm = TRUE) # C
mean(data_anova$primary[data_anova$groupe == 0 & data_anova$ocohort == 1], na.rm=TRUE)#D
# OU en filtrant et moyennant
mean(data_anova$primary[data_anova$groupe == 1 & data_anova$ycohort == 1], na.rm = TRUE)  # A
# Moyennes primaires pour chaque groupe
with(data_anova, tapply(primary, list(groupe, ycohort), mean, na.rm = TRUE))
# Moyennes primaires pour chaque groupe
moyennes <- with(data_anova, tapply(primary, list(groupe, ycohort), mean, na.rm = TRUE))
moyennes<- as.data.frame(moyennes)
moyennes$`0`
# OU en filtrant et moyennant
mean(data_anova$primary[data_anova$groupe == 1 & data_anova$ycohort == 1], na.rm = TRUE)  # A
mean(data_anova$primary[data_anova$groupe == 1 & data_anova$ocohort == 1], na.rm = TRUE) # B
mean(data_anova$primary[data_anova$groupe == 0 & data_anova$ycohort == 1], na.rm = TRUE) # C
mean(data_anova$primary[data_anova$groupe == 0 & data_anova$ocohort == 1], na.rm=TRUE)#D
# Moyennes primaires pour chaque groupe
with(data_anova, tapply(primary, list(groupe, ycohort), mean, na.rm = TRUE))
# Moyennes primaires pour chaque groupe
moyennes <- as.data.frame(with(data_anova, tapply(primary, list(groupe, ycohort), mean, na.rm = TRUE)))
moyennes
names(moyennes)[1] <- "N'ayant pas terminé le primaire"
moyennes
names(moyennes)[1] <- "Agée"
names(moyennes)[2] <- "Jeune"
moyennes
# Créer les valeurs
A <- 0.9016
B <- 0.4286
C <- 0.7942
D <- 0.3764
# Calculs des différences
diff_traitement <- A - B
diff_controle <- C - D
double_diff <- diff_traitement - diff_controle
# Créer un data frame du tableau
tableau_dd <- data.frame(
Groupe = c("Traitement", "Contrôle", "Double différence"),
Jeunes = c(round(A, 4), round(C, 4), ""),
Âgés = c(round(B, 4), round(D, 4), ""),
Différence = c(round(diff_traitement, 4), round(diff_controle, 4), round(double_diff, 4))
)
# Afficher le tableau
print(tableau_dd, right = FALSE, row.names = FALSE)
# Moyennes pour chaque groupe
A <- mean(data$primary[data$treat == 1 & data$ycohort == 1], na.rm = TRUE)
B <- mean(data$primary[data$treat == 1 & data$ocohort == 1], na.rm = TRUE)
C <- mean(data$primary[data$treat == 0 & data$ycohort == 1], na.rm = TRUE)
D <- mean(data$primary[data$treat == 0 & data$ocohort == 1], na.rm = TRUE)
# Calculs des différences
diff_traitement <- A - B
diff_controle <- C - D
double_difference <- diff_traitement - diff_controle
# Créer un tableau formaté comme dans l'énoncé
tableau_dd <- data.frame(
row.names = c("Cohorte jeune", "Cohorte âgée", "Première différence"),
"Villages de traitement" = c(round(A, 4), round(B, 4), round(diff_traitement, 4)),
"Villages de contrôle" = c(round(C, 4), round(D, 4), round(diff_controle, 4)),
"Double différence : (a-b)-(c-d)" = c("", "", round(double_difference, 4))
)
# Afficher le tableau
print(tableau_dd)
# Moyennes pour chaque groupe
A <- mean(data_anova$primary[data_anova$treat == 1 & data_anova$ycohort == 1], na.rm = TRUE)
B <- mean(data_anova$primary[data_anova$treat == 1 & data_anova$ocohort == 1], na.rm = TRUE)
C <- mean(data_anova$primary[data_anova$treat == 0 & data_anova$ycohort == 1], na.rm = TRUE)
D <- mean(data_anova$primary[data_anova$treat == 0 & data_anova$ocohort == 1], na.rm = TRUE)
# Calculs des différences
diff_traitement <- A - B
diff_controle <- C - D
double_difference <- diff_traitement - diff_controle
# Créer un tableau formaté comme dans l'énoncé
tableau_dd <- data.frame(
row.names = c("Cohorte jeune", "Cohorte âgée", "Première différence"),
"Villages de traitement" = c(round(A, 4), round(B, 4), round(diff_traitement, 4)),
"Villages de contrôle" = c(round(C, 4), round(D, 4), round(diff_controle, 4)),
"Double différence : (a-b)-(c-d)" = c("", "", round(double_difference, 4))
)
# Afficher le tableau
print(tableau_dd)
# Régression double différence (sans autres contrôles)
model_dd <- lm(primary ~ treat + ycohort + ycohortxtreat, data = data_anova)
summary(model_dd)
# Pour les hommes (sex1994 == 1)
model_hommes <- lm(primary ~ treat + ycohort + ycohortxtreat, data = subset(data_anova, sex1994 == 1))
summary(model_hommes)
# Pour les femmes (sex1994 == 0)
model_femmes <- lm(primary ~ treat + ycohort + ycohortxtreat, data = subset(data_anova, sex1994 == 0))
summary(model_femmes)
# Construction de la base village
villages <- data_anova[!duplicated(data_anova$cluster), ]
# Moyennes
aggregate(cbind(electric, pipwater, distcapital) ~ groupe, data =villages, mean)
# Construction de la base village
villages <- data_anova[!duplicated(data_anova$cluster), ]
# Moyennes
res <- as.data.frame(aggregate(cbind(electric, pipwater, distcapital) ~ groupe, data =villages, mean))
kable(res, caption = "La moyenne niveau village")
# MCO
model_mco <- lm(primary ~ groupe, data=jeunes)
summary(model_mco)
# Moyennes pour chaque groupe
A <- mean(data_anova$primary[data_anova$treat == 1 & data_anova$ycohort == 1], na.rm = TRUE)
B <- mean(data_anova$primary[data_anova$treat == 1 & data_anova$ocohort == 1], na.rm = TRUE)
C <- mean(data_anova$primary[data_anova$treat == 0 & data_anova$ycohort == 1], na.rm = TRUE)
D <- mean(data_anova$primary[data_anova$treat == 0 & data_anova$ocohort == 1], na.rm = TRUE)
# Calculs des différences
diff_traitement <- A - B
diff_controle <- C - D
double_difference <- diff_traitement - diff_controle
# Créer un tableau formaté comme dans l'énoncé
tableau_dd <- data.frame(
row.names = c("Cohorte jeune", "Cohorte âgée", "Première différence"),
"Villages de traitement" = c(round(A, 4), round(B, 4), round(diff_traitement, 4)),
"Villages de contrôle" = c(round(C, 4), round(D, 4), round(diff_controle, 4)),
"Double différence : (a-b)-(c-d)" = c("", "", round(double_difference, 4))
)
# Afficher le tableau
table <- kable(tableau_dd, caption = "Tableau")
# Afficher le tableau
kable(tableau_dd, caption = "Tableau")
# Moyennes pour chaque groupe
A <- mean(data_anova$primary[data_anova$treat == 1 & data_anova$ycohort == 1], na.rm = TRUE)
B <- mean(data_anova$primary[data_anova$treat == 1 & data_anova$ocohort == 1], na.rm = TRUE)
C <- mean(data_anova$primary[data_anova$treat == 0 & data_anova$ycohort == 1], na.rm = TRUE)
D <- mean(data_anova$primary[data_anova$treat == 0 & data_anova$ocohort == 1], na.rm = TRUE)
# Calculs des différences
diff_traitement <- A - B
diff_controle <- C - D
double_difference <- diff_traitement - diff_controle
# Créer un tableau formaté comme dans l'énoncé
tableau_dd <- data.frame(
row.names = c("Cohorte jeune", "Cohorte âgée", "Première différence"),
"Villages de traitement" = c(round(A, 4), round(B, 4), round(diff_traitement, 4)),
"Villages de contrôle" = c(round(C, 4), round(D, 4), round(diff_controle, 4)),
"Double différence" = c("", "", round(double_difference, 4))
)
# Afficher le tableau
kable(tableau_dd, caption = "Tableau")
