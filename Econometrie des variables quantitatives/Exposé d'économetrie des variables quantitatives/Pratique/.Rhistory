ggplot(base, aes(x = proximite, y = resid_mco)) +
geom_boxplot(fill = "#fc9272") +
labs(title = "Effet de la proximité sur les résidus du salaire (MCO)",
x = "Proximité collège (0/1)", y = "Résidu salaire") +
theme_minimal()
# install.packages("ggdag")
library(ggdag)
dag <- dagify(
salaire ~ education + experience + race_noir + sud + zone,
education ~ proximite + experience + race_noir + sud ,
exposure = "education",
outcome = "salaire"
)
ggdag(dag, layout = "circle") +
theme_dag()
# install.packages("ggdag")
library(ggdag)
dag <- dagify(
salaire ~ education + experience + race_noir + sud ,
education ~ proximite + experience + race_noir + sud ,
exposure = "education",
outcome = "salaire"
)
ggdag(dag, layout = "circle") +
theme_dag()
# Modèle MCO sans instrument
mod_mco <- lm(salaire ~ education + sud + race_noir + exper_marche + experience , data = base)
# Résidus du modèle
base$resid_mco <- resid(mod_mco)
ggplot(base, aes(x = proximite, y = resid_mco)) +
geom_boxplot(fill = "#fc9272") +
labs(title = "Effet de la proximité sur les résidus du salaire (MCO)",
x = "Proximité collège (0/1)", y = "Résidu salaire") +
theme_minimal()
ggplot(base, aes(x = factor(proximite), y = education)) +
geom_boxplot(fill = "#74c476", alpha = 0.7) +
labs(
title = "Effet de la proximité sur le niveau d'éducation",
x = "Proximité collège (0 = non, 1 = oui)",
y = "Niveau d'éducation"
) +
theme_minimal()
ggplot(base, aes(x = proximite, y = education)) +
geom_jitter(width = 0.1, alpha = 0.2, color = "grey40") +
geom_smooth(method = "lm", color = "#0570b0", se = TRUE) +
labs(
title = "Relation entre proximité et niveau d'éducation",
x = "Proximité collège",
y = "Niveau d'éducation"
) +
theme_minimal()
base %>%
group_by(proximite) %>%
summarise(moyenne_educ = mean(education, na.rm = TRUE)) %>%
ggplot(aes(x = factor(proximite), y = moyenne_educ)) +
geom_col(fill = "#3182bd") +
labs(
title = "Éducation moyenne selon la proximité",
x = "Proximité collège",
y = "Éducation moyenne"
) +
theme_minimal()
ggplot(base, aes(x = proximite, y = educa)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(base, aes(x = proximite, y = education)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(base, aes(x = proximite, y = salaire)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(base, aes(x = proximite, y = salaire)) +
geom_point() +
geom_smooth(method = "iv")
ggplot(base, aes(x = proximite, y = salaire)) +
geom_point() +
geom_smooth(method = "lm")
mod_mco <- lm(salaire ~ education + sud + race_noir + exper_marche + experience , data = base)
base$resid_mco <- resid(mod_mco)
ggplot(base, aes(x = factor(proximite), y = resid_mco)) +
geom_boxplot(fill = "#fc9272") +
labs(
title = "Effet de la proximité sur les résidus du salaire (MCO)",
x = "Proximité collège (0/1)",
y = "Résidu du salaire"
) +
theme_minimal()
ggplot(base, aes(x = factor(proximite), y = education)) +
geom_boxplot(fill = "#74c476") +
labs(
title = "Éducation selon la proximité au collège",
x = "Proximité collège (0/1)",
y = "Niveau d'éducation"
) +
theme_minimal()
model_aux <- lm(education ~ proximite + sud + race_noir + exper_marche + experience, data = base)
tidy(model_aux)
base_avec_predit <- augment_columns(model_aux, base) |>
rename(education_estim = .fitted)
model2 <- lm(salarie ~ education_estim,
data = base_avec_predit)
tidy(model2)
model2 <- lm(salaire ~ education_estim,
data = base_avec_predit)
tidy(model2)
model2 <- lm(salaire ~ education_estim +sud + race_noir + exper_marche + experienc,
data = base_avec_predit)
tidy(model2)
model_2sls <- iv_robust(salaire ~ education + sud  + exper_marche + experience + race_noir  |
proximite + sud + race_noir + exper_marche + experience ,
data = base, diagnostics = TRUE)
tidy(model_2sls)
base_avec_predit
model2 <- lm(salaire ~ education_estim +sud + race_noir + exper_marche + experience,
data = base_avec_predit)
tidy(model2)
modelsummary(list("OLS" = model_naif, "2SLS (by hand)" = model2,
"2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE) |>
# Add a background color to rows 3 and 5
row_spec(c(3, 5), background = "#F5ABEA")
modelsummary(list("OLS" = model_naif, "2SLS (by hand)" = model2,
"2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE) |>
# Add a background color to rows 3 and 5
row_spec(c(3, 5), background = "#F5ABEA")
modelsummary(
list("OLS" = model_naif, "2SLS (by hand)" = model2, "2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE,
output = "gt"
) |>
gt::tab_style(
style = gt::cell_fill(color = "#F5ABEA"),
locations = gt::cells_body(rows = c(3, 5))
)
summary(model_2sls)
model_again <- ivreg(salaire ~ education + sud +race_noir + exper_marche + experience |
proximite + sud + race_noir + exper_marche + experience ,
data = base,x=TRUE)
anderson.rubin.ci(model_again)
## $confidence.interval
## [1] "[ 0.0570787017122882 , 0.314883971078236 ]"
model_naif <- lm(salaire ~ education + sud + race_noir + exper_marche + experience , data = base)
summary(model_naif)
summary(model_2sls)
# Suppose que tu as un data.frame 'base' avec salaire et education
ggplot(base, aes(x = education, y = salaire)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linetype = "dashed") +  # OLS
geom_abline(intercept = 2.06, slope = 0.2359, color = "red") +  # IV estimée
labs(
title = "Effet de l'éducation sur le salaire : OLS vs IV",
subtitle = "Ligne bleue : OLS (biaisée) | Ligne rouge : IV (effet causal)",
x = "Années d'éducation",
y = "Salaire"
)
modelsummary(
list("OLS" = model_naif, "2SLS (by hand)" = model2, "2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE,
output = "gt"
) |>
gt::tab_style(
style = gt::cell_fill(color = "#FF3"),
locations = gt::cells_body(rows = c(3, 5))
)
modelsummary(
list("OLS" = model_naif, "2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE,
output = "gt"
) |>
gt::tab_style(
style = gt::cell_fill(color = "#FF3"),
locations = gt::cells_body(rows = c(3, 5))
)
library(tidyverse)  # ggplot(), mutate(), and friends
library(broom)  # Convert models to data frames
library(modelsummary)  # Create side-by-side regression tables
library(kableExtra)  # Add fancier formatting to tables
library(estimatr)  # Run 2SLS models in one step with iv_robust()
library(dplyr)
library(AER) # Pour les models instrumentaux (iv)
library(plm) #Pour le test de hausman
library(ggplot2)
base <- read.csv("base_educ.csv", sep = ",") %>%
select(all_of(c("lwage", "educ", "nearc4", "exper", "expersq", "black", "south66"))) %>%
rename(
salaire = lwage,
education = educ,
proximite = nearc4,
#zone = smsa66,
experience = exper,
exper_marche = expersq,
race_noir = black,
sud = south66
) %>%
na.omit()
model_naif <- lm(salaire ~ education + sud + race_noir + exper_marche + experience , data = base)
summary(model_naif)
iv_model <- AER::ivreg(salaire ~ education + sud +race_noir + exper_marche + experience |
proximite + sud + race_noir + exper_marche + experience ,
data = base)
#summary(iv_model)
summary(iv_model, diagnostics = TRUE)
check_pertinence<- lm(education ~ proximite + sud  + exper_marche + experience + race_noir,
data = base)
tidy(check_pertinence)
glance(check_pertinence)
# install.packages("ggdag")
library(ggdag)
dag <- dagify(
salaire ~ education + experience + race_noir + sud ,
education ~ proximite + experience + race_noir + sud ,
exposure = "education",
outcome = "salaire"
)
ggdag(dag, layout = "circle") +
theme_dag()
model_aux <- lm(education ~ proximite + sud + race_noir + exper_marche + experience, data = base)
tidy(model_aux)
base_avec_predit <- augment_columns(model_aux, base) |>
rename(education_estim = .fitted)
base_avec_predit
model2 <- lm(salaire ~ education_estim +sud + race_noir + exper_marche + experience,
data = base_avec_predit)
tidy(model2)
model_2sls <- iv_robust(salaire ~ education + sud  + exper_marche + experience + race_noir  |
proximite + sud + race_noir + exper_marche + experience ,
data = base, diagnostics = TRUE)
tidy(model_2sls)
modelsummary(
list("OLS" = model_naif, "2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE,
output = "gt"
) |>
gt::tab_style(
style = gt::cell_fill(color = "#FF3"),
locations = gt::cells_body(rows = c(3, 5))
)
# Suppose que tu as un data.frame 'base' avec salaire et education
ggplot(base, aes(x = education, y = salaire)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linetype = "dashed") +  # OLS
geom_abline(intercept = 2.06, slope = 0.2359, color = "red") +  # IV estimée
labs(
title = "Effet de l'éducation sur le salaire : OLS vs IV",
subtitle = "Ligne bleue : OLS (biaisée) | Ligne rouge : IV (effet causal)",
x = "Années d'éducation",
y = "Salaire"
)
summary(model_2sls)
library(tidyverse)  # ggplot(), mutate(), and friends
library(broom)  # Convert models to data frames
library(modelsummary)  # Create side-by-side regression tables
library(kableExtra)  # Add fancier formatting to tables
library(estimatr)  # Run 2SLS models in one step with iv_robust()
library(dplyr)
library(AER) # Pour les models instrumentaux (iv)
library(plm) #Pour le test de hausman
library(ggplot2)
#library(tidyverse)  # ggplot(), mutate(), and friends
library(broom)  # Convert models to data frames
library(modelsummary)  # Create side-by-side regression tables
library(kableExtra)  # Add fancier formatting to tables
library(estimatr)  # Run 2SLS models in one step with iv_robust()
library(dplyr)
library(AER) # Pour les models instrumentaux (iv)
library(plm) #Pour le test de hausman
library(ggplot2)
base <- read.csv("base_educ.csv", sep = ",") %>%
select(all_of(c("lwage", "educ", "nearc4", "exper", "expersq", "black", "south66"))) %>%
rename(
salaire = lwage,
education = educ,
proximite = nearc4,
#zone = smsa66,
experience = exper,
exper_marche = expersq,
race_noir = black,
sud = south66
) %>%
na.omit()
#library(tidyverse)  # ggplot(), mutate(), and friends
library(broom)  # Convert models to data frames
library(modelsummary)  # Create side-by-side regression tables
library(kableExtra)  # Add fancier formatting to tables
library(estimatr)  # Run 2SLS models in one step with iv_robust()
library(dplyr)
library(AER) # Pour les models instrumentaux (iv)
library(plm) #Pour le test de hausman
library(ggplot2)
base <- read.csv("base_educ.csv", sep = ",") %>%
select(all_of(c("lwage", "educ", "nearc4", "exper", "expersq", "black", "south66"))) %>%
rename(
salaire = lwage,
education = educ,
proximite = nearc4,
#zone = smsa66,
experience = exper,
exper_marche = expersq,
race_noir = black,
sud = south66
) %>%
na.omit()
model_naif <- lm(salaire ~ education + sud + race_noir + exper_marche + experience , data = base)
summary(model_naif)
iv_model <- AER::ivreg(salaire ~ education + sud +race_noir + exper_marche + experience |
proximite + sud + race_noir + exper_marche + experience ,
data = base)
#summary(iv_model)
summary(iv_model, diagnostics = TRUE)
check_pertinence<- lm(education ~ proximite + sud  + exper_marche + experience + race_noir,
data = base)
tidy(check_pertinence)
glance(check_pertinence)
# install.packages("ggdag")
library(ggdag)
dag <- dagify(
salaire ~ education + experience + race_noir + sud ,
education ~ proximite + experience + race_noir + sud ,
exposure = "education",
outcome = "salaire"
)
ggdag(dag, layout = "circle") +
theme_dag()
model_aux <- lm(education ~ proximite + sud + race_noir + exper_marche + experience, data = base)
tidy(model_aux)
base_avec_predit <- augment_columns(model_aux, base) |>
rename(education_estim = .fitted)
model2 <- lm(salaire ~ education_estim +sud + race_noir + exper_marche + experience,
data = base_avec_predit)
tidy(model2)
model_2sls <- iv_robust(salaire ~ education + sud  + exper_marche + experience + race_noir  |
proximite + sud + race_noir + exper_marche + experience ,
data = base, diagnostics = TRUE)
tidy(model_2sls)
modelsummary(
list("OLS" = model_naif, "2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE,
output = "gt"
) |>
gt::tab_style(
style = gt::cell_fill(color = "#FF3"),
locations = gt::cells_body(rows = c(3, 5))
)
# Suppose que tu as un data.frame 'base' avec salaire et education
ggplot(base, aes(x = education, y = salaire)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linetype = "dashed") +  # OLS
geom_abline(intercept = 2.06, slope = 0.2359, color = "red") +  # IV estimée
labs(
title = "Effet de l'éducation sur le salaire : OLS vs IV",
subtitle = "Ligne bleue : OLS (biaisée) | Ligne rouge : IV (effet causal)",
x = "Années d'éducation",
y = "Salaire"
)
summary(model_2sls)
#library(tidyverse)  # ggplot(), mutate(), and friends
library(broom)  # Convert models to data frames
library(modelsummary)  # Create side-by-side regression tables
library(kableExtra)  # Add fancier formatting to tables
library(estimatr)  # Run 2SLS models in one step with iv_robust()
library(dplyr)
library(AER) # Pour les models instrumentaux (iv)
library(plm) #Pour le test de hausman
library(ggplot2)
base <- read.csv("base_educ.csv", sep = ",") %>%
select(all_of(c("lwage", "educ", "nearc4", "exper", "expersq", "black", "south66"))) %>%
rename(
salaire = lwage,
education = educ,
proximite = nearc4,
#zone = smsa66,
experience = exper,
exper_marche = expersq,
race_noir = black,
sud = south66
) %>%
na.omit()
model_naif <- lm(salaire ~ education + sud + race_noir + exper_marche + experience , data = base)
summary(model_naif)
iv_model <- AER::ivreg(salaire ~ education + sud +race_noir + exper_marche + experience |
proximite + sud + race_noir + exper_marche + experience ,
data = base)
#summary(iv_model)
summary(iv_model, diagnostics = TRUE)
check_pertinence<- lm(education ~ proximite + sud  + exper_marche + experience + race_noir,
data = base)
tidy(check_pertinence)
glance(check_pertinence)
# install.packages("ggdag")
library(ggdag)
dag <- dagify(
salaire ~ education + experience + race_noir + sud ,
education ~ proximite + experience + race_noir + sud ,
exposure = "education",
outcome = "salaire"
)
ggdag(dag, layout = "circle") +
theme_dag()
dag <- dagify(
salaire ~ education + experience + race_noir + sud ,
education ~ proximite + experience + race_noir + sud ,
exposure = "education",
outcome = "salaire"
)
ggdag(dag, layout = "circle") +
theme_dag()
model_aux <- lm(education ~ proximite + sud + race_noir + exper_marche + experience, data = base)
tidy(model_aux)
base_avec_predit <- augment_columns(model_aux, base) |>
rename(education_estim = .fitted)
model2 <- lm(salaire ~ education_estim +sud + race_noir + exper_marche + experience,
data = base_avec_predit)
tidy(model2)
model_2sls <- iv_robust(salaire ~ education + sud  + exper_marche + experience + race_noir  |
proximite + sud + race_noir + exper_marche + experience ,
data = base, diagnostics = TRUE)
tidy(model_2sls)
modelsummary(
list("OLS" = model_naif, "2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE,
output = "gt"
) |>
gt::tab_style(
style = gt::cell_fill(color = "#FF3"),
locations = gt::cells_body(rows = c(3, 5))
)
# Suppose que tu as un data.frame 'base' avec salaire et education
ggplot(base, aes(x = education, y = salaire)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linetype = "dashed") +  # OLS
geom_abline(intercept = 2.06, slope = 0.2359, color = "red") +  # IV estimée
labs(
title = "Effet de l'éducation sur le salaire : OLS vs IV",
subtitle = "Ligne bleue : OLS (biaisée) | Ligne rouge : IV (effet causal)",
x = "Années d'éducation",
y = "Salaire"
)
summary(model_2sls)
summary(iv_model, diagnostics = TRUE)
#library(tidyverse)  # ggplot(), mutate(), and friends
library(broom)  # Convert models to data frames
library(modelsummary)  # Create side-by-side regression tables
library(kableExtra)  # Add fancier formatting to tables
library(estimatr)  # Run 2SLS models in one step with iv_robust()
library(dplyr)
library(AER) # Pour les models instrumentaux (iv)
library(plm) #Pour le test de hausman
library(ggplot2)
# install.packages("ggdag")
library(ggdag) #
base <- read.csv("base_educ.csv", sep = ",") %>%
select(all_of(c("lwage", "educ", "nearc4", "exper", "expersq", "black", "south66"))) %>%
rename(
salaire = lwage,
education = educ,
proximite = nearc4,
experience = exper,
exper_marche = expersq,
race_noir = black,
sud = south66
) %>%
na.omit()
model_naif <- lm(salaire ~ education + sud + race_noir + exper_marche + experience , data = base)
summary(model_naif)
iv_model <- AER::ivreg(salaire ~ education + sud +race_noir + exper_marche + experience |
proximite + sud + race_noir + exper_marche + experience ,
data = base)
#summary(iv_model)
summary(iv_model, diagnostics = TRUE)
check_pertinence<- lm(education ~ proximite + sud  + exper_marche + experience + race_noir,
data = base)
tidy(check_pertinence)
glance(check_pertinence)
dag <- dagify(
salaire ~ education + experience + race_noir + sud ,
education ~ proximite + experience + race_noir + sud ,
exposure = "education",
outcome = "salaire"
)
ggdag(dag, layout = "circle") +
theme_dag()
model_aux <- lm(education ~ proximite + sud + race_noir + exper_marche + experience, data = base)
tidy(model_aux)
base_avec_predit <- augment_columns(model_aux, base) |>
rename(education_estim = .fitted)
model2 <- lm(salaire ~ education_estim +sud + race_noir + exper_marche + experience,
data = base_avec_predit)
tidy(model2)
model_2sls <- iv_robust(salaire ~ education + sud  + exper_marche + experience + race_noir  |
proximite + sud + race_noir + exper_marche + experience ,
data = base, diagnostics = TRUE)
tidy(model_2sls)
modelsummary(
list("OLS" = model_naif, "2SLS (automatic)" = model_2sls),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE,
output = "gt"
) |>
gt::tab_style(
style = gt::cell_fill(color = "#FF3"),
locations = gt::cells_body(rows = c(3, 5))
)
summary(model_2sls)
